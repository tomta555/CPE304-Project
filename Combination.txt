    lw    0    1    n    load n to $1
    lw    0    2    r    load r to $2
    lw    0    5    stackAddr    
    lw    0    4    combiAddr    $4 = combi
    jalr    4    7    call combi        
    lw    0    1    n    load n to $1    
    lw    0    2    r    load r to $2
    halt     end of program        
combi    lw    0    6    four          
    add    5    6    5      
    sw    5    7    -1    
    lw    0    6    one     
    add    0    1    3    $3 = n
    beq    2    6    ret1    r==1 return n
    lw    0    3    one     
    beq    1    2    ret1    n==r  go return 1 
    beq    0    2    ret1    r==0  go return 1  
    sw    5    1    -3    
    sw    5    2    -2      
    lw    0    6    neg1    
    add    1    6    1    n-1   
    jalr    4    7       call combi(n-1,r)
    sw    5    3    stack    store combi(n-1,r) in $3
    lw    5    1    -3     
    lw    5    2    -2     
    lw    0    6    neg1     
    add    1    6    1    n-1
    add    2    6    2    r-1
    jalr    4    7     call combi(n-1,r-1)
    lw    5    6    stack    
    add    3    6    3    
ret1    lw    0    6    neg4     
    lw    5    7    -1       load returnAddres to &7
    add    5    6    5          delete stack
    jalr    7    6     go to returnAddres
combiAddr    .fill    combi     
n    .fill    10           
r    .fill    9       
one    .fill    1      
neg1    .fill    -1     
four    .fill    4    
neg4    .fill    -4    
stackAddr    .fill    stack     
stack    .fill    0         